pipeline {
    agent any
    environment {
        dockerImageNameBuild = "agent"
        container_name = "c_${BUILD_ID}_${JENKINS_NODE_COOKIE}"
    }

    stages {
        stage("Checkout ts_recipes") {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/tickets/DM-21505']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/lsst-ts/ts_recipes']]])
            }

        }
        stage("Build") {
            steps {
                dir('agent') {
                    script {
                        dockerImageBuild = docker.build(dockerImageNameBuild, "--pull --no-cache .")
                    }
                }
            }
        }
        stage("Create SALObj Conda package") {
            steps {
                script {
                    sh """
                    docker run --name ${container_name} -di --rm agent
                    docker exec ${container_name} sh -c "git clone https://github.com/lsst-ts/ts_recipes"
                    docker exec ${container_name} sh -c "cd ts_recipes && git checkout tickets/DM-21505"
                    docker exec --env TS_SALOBJ_VERSION=v5.3.0 ${container_name} sh -c "cd ts_recipes/ts_salobj && source ~/miniconda3/bin/activate && conda build ."
                    """
                }
            }
        }
    }
    post {
        cleanup {
            sh """
            docker stop ${container_name}
            """
        }
    }
}
